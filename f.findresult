./apt-mirror.sh:5:#RSYNCSOURCE=rsync://ubuntu.dormforce.net/ubuntu/
./apt-mirror.sh:11:if [ ${check_bool} -eq 1 ];   
./apt-mirror.sh:13:  # check to see if script is already running
./apt-mirror.sh:15:  LCK_FILE=`basename $0`.lck
./apt-mirror.sh:17:  if [ -f "${LCK_FILE}" ]; then
./apt-mirror.sh:18:    MYPID=`head -n 1 "${LCK_FILE}"`
./apt-mirror.sh:22:    if [ -z "${TEST_RUNNING}" ]; then
./apt-mirror.sh:24:      # Echo current PID into lock file
./apt-mirror.sh:25:    echo $$ > "${LCK_FILE}"
./apt-mirror.sh:26:    rsync -ahHv --log-file=/root/rlog --delete-after \
./apt-mirror.sh:35:    fi
./apt-mirror.sh:37:    echo $$ > "${LCK_FILE}"
./apt-mirror.sh:38:  fi
./apt-mirror.sh:41:fi
./back.sh:5:if [ ! -d "${TARGET}" ];
./back.sh:8:fi
./back.sh:10:rsync -aH --delete-after \
./back.sh:12:  --exclude=/etc/fstab \
./back.sh:13:  --exclude=/boot/grub/grub.cfg \
./back.sh:14:  --exclude=/lost+found \
./build.sh:4:localmain="/media/volgrp/work/platform/pcc/cnbuild/build/output/"
./build.sh:6:FILE_TYPE="$HOME/bashrc/file_type"
./build.sh:7:command_params=`cat ${FILE_TYPE}|{ read suf; echo -n "--include=$suf/**";while read suf;do echo -n " --include=$suf";done;     }`
./build.sh:10:# check to see if script is already running
./build.sh:12:LCK_FILE=`basename $0`.lck
./build.sh:14:if [ -f "${LCK_FILE}" ]; then
./build.sh:15:  MYPID=`head -n 1 "${LCK_FILE}"`
./build.sh:19:  if [ -z "${TEST_RUNNING}" ]; then
./build.sh:21:    # Echo current PID into lock file
./build.sh:22:    echo $$ > "${LCK_FILE}"
./build.sh:23:    rsync -avH --include=*/  $command_params --exclude=* --prune-empty-dirs --log-file="/root/rlog" --delete-after ${mainsource} ${localmain}
./build.sh:29:  fi
./build.sh:31:  echo $$ > "${LCK_FILE}"
./build.sh:32:fi
./check_disk.sh:2:check_file=~/disk_list.txt
./check_disk.sh:4:for file in `cat $check_file`
./check_disk.sh:6:		if ! (df -Th|grep -q ${file})
./check_disk.sh:9:    	echo ${file}>> check_disk.log
./check_disk.sh:10:	 	fi
./check_raid.sh:3:if [ $raid_count -lt 4 ] 
./check_raid.sh:12:fi
./check_running.sh:5:#RSYNCSOURCE=rsync://ubuntu.dormforce.net/ubuntu/
./check_running.sh:10:# check to see if script is already running
./check_running.sh:12:LCK_FILE=`basename $0`.lck
./check_running.sh:14:if [ -f "${LCK_FILE}" ]; then
./check_running.sh:15:  MYPID=`head -n 1 "${LCK_FILE}"`
./check_running.sh:19:  if [ -z "${TEST_RUNNING}" ]; then
./check_running.sh:21:    # Echo current PID into lock file
./check_running.sh:22:  echo $$ > "${LCK_FILE}"
./check_running.sh:23:  rsync -ahHv --log-file=/root/rlog --delete-after \
./check_running.sh:31:  fi
./check_running.sh:33:  echo $$ > "${LCK_FILE}"
./check_running.sh:34:fi
./copy.sh:5:if [ ! -d "${TARGET}" ];
./copy.sh:8:fi
./cscope.sh:2:TARGET='/export/home1/username/cscope_db/cscope.files'
./cscope.sh:3:FILE_POSTFIX=$HOME/bashrc/postfix
./cscope.sh:4:PRUNE_POSTFIX=$HOME/bashrc/prunefix
./cscope.sh:5:find_params=();
./cscope.sh:8:while read suf
./cscope.sh:10:  find_params+=( $or "-name" "*.$suf" )
./cscope.sh:12:done < "$FILE_POSTFIX"
./cscope.sh:14:while read suf
./cscope.sh:16:  prune_params+=( $or "-iname" "*.$suf" )
./cscope.sh:18:done < "$PRUNE_POSTFIX"
./cscope.sh:19:find "$PWD" "(" "${prune_params[@]}" "-o" "-iname" "find.cc" ")" -a -prune -o "(" "${find_params[@]}" "-o" "-iname" "makefile" ")" -print |sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' > ${TARGET}
./csr.sh:2:find . -name "*.h" -o -name "*.c" -o -name "*.cc" -o -name "*.cpp" -o -name "*.hpp" -o -name "*.java"> cscope.files
./csr.sh:3:cscope -Rq cscope.files
./dcopy.sh:5:if [ ! -d "${TARGET}" ];
./dcopy.sh:8:fi
./debmirror.sh:1:#### Start script to automate building of Ubuntu mirror #####
./debmirror.sh:2:## THE NEXT LINE IS NEEDED THE REST OF THE LINES STARTING WITH A # CAN BE DELETED
./debmirror.sh:13:# Arch=         -a      # Architecture. For Ubuntu can be i386, powerpc or amd64.
./debmirror.sh:14:# sparc, only starts in dapper, it is only the later models of sparc.
./debmirror.sh:19:# Section=      -s      # Section (One of the following - main/restricted/universe/multiverse).
./debmirror.sh:20:# You can add extra file with $Section/debian-installer. ex: main/debian-installer,universe/debian-installer,multiverse/debian-installer,restricted/debian-installer
./debmirror.sh:24:# Release=      -d      # Release of the system (Dapper, Edgy, Feisty, Gutsy, Hardy, Intrepid), and the -updates and -security ( -backports can be added if desired)
./debmirror.sh:29:# CHANGE "*" to equal the mirror you want to create your mirror from. au. in Australia  ca. in Canada.
./debmirror.sh:30:# This can be found in your own /etc/apt/sources.list file, assuming you have Ubuntu installed.
./debmirror.sh:36:# Dir=          -r      # Path from the main server, so http://my.web.server/$dir, Server dependant
./debmirror.sh:40:# Proto=        -e      # Protocol to use for transfer (http, ftp, hftp, rsync)
./debmirror.sh:46:# Make this a full path to where you want to mirror the material.
./debmirror.sh:51:# The --progress option shows files as they are downloaded
./debmirror.sh:52:# --source \ in the place of --no-source \ if you want sources also.
./debmirror.sh:53:# --nocleanup  Do not clean up the local mirror after mirroring is complete. Use this option to keep older repository
./debmirror.sh:67:#### End script to automate building of Ubuntu mirror ####
./debug.sh:2:if [ -z "$1" ];
./debug.sh:4:  valgrind -v --log-file=vlog --leak-check=full ./*.exe
./debug.sh:6:  valgrind -v --log-file=vlog --leak-check=full ./$1
./debug.sh:7:fi
./dof.sh:2:for ss in `$1`; do $2 $ss; done
./dof.sh:3:#echo "for ss in `$1`; do echo $ss; done"
./encrypt.sh:2:if [ -z "$1" ];
./encrypt.sh:6:  cryptsetup -h sha256 -c aes-cbc-essiv:sha256 -s 256 luksFormat "$1"
./encrypt.sh:7:fi
./exiso.sh:5:umount -fl /media/cdrom
./exiso.sh:12:  && rm -fv "${source}"
./fc.sh:2:find "$1" \( -name \.svn -o -name \.git -o -name \.hg \) -prune -o -mmin -5 -print
./fd.sh:2:PRUNE_POSTFIX=$HOME/bashrc/prunefix
./fd.sh:5:while read suf
./fd.sh:7:  prune_params+=( $or "-iname" "*.$suf" )
./fd.sh:9:done < "$PRUNE_POSTFIX"
./fd.sh:10:find "$1" "(" "${prune_params[@]}" ")" -prune -type d -o -iname "$2" -print
./ff.sh:2:PRUNE_POSTFIX=$HOME/bashrc/prunefix
./ff.sh:5:while read suf
./ff.sh:7:  prune_params+=( $or "-iname" "*.$suf" )
./ff.sh:9:done < "$PRUNE_POSTFIX"
./ff.sh:10:find "$1" "(" "${prune_params[@]}" ")" -prune -type f -o -iname "$2"
./fgh.sh:2:function iterate_dir(){
./fgh.sh:3:for file in "$1"/*
./fgh.sh:5:  if [ -d "$file" ];
./fgh.sh:7:    if [ -d "$file/.git" ];
./fgh.sh:9:      $HOME/bashrc/gagh.sh "$file"
./fgh.sh:11:      iterate_dir "$file"
./fgh.sh:12:    fi
./fgh.sh:13:  fi
./fgh.sh:16:if [ -z "$1" ];
./fgh.sh:21:fi
./fgicb.sh:2:for file in `ls .`
./fgicb.sh:4:  cd $file
./fgs.sh:2:function rec_dir() {
./fgs.sh:3:for file in `ls $1`
./fgs.sh:5:  if [ -d $1"/"$file ]
./fgs.sh:7:    if [ ! -d $1"/"$file"/.git" ]
./fgs.sh:9:      rec_dir $1"/"$file
./fgs.sh:10:    elif [ -d $1"/"$file"/.git" ]
./fgs.sh:12:      cd $1"/"$file
./fgs.sh:13:      if  ( git status|grep -q modified: )
./fgs.sh:16:      fi 
./fgs.sh:18:    fi
./fgs.sh:19:  fi 
./fgs.sh:22:if [ -n "$1" ]
./fgs.sh:27:fi
./fjar.sh:2:LOOK_FOR="$2"
./fjar.sh:4:for i in `find "$1" -name "*jar"`
./fjar.sh:7:  jar tvf $i | grep $LOOK_FOR > /dev/null
./fjar.sh:8:  if [ $? == 0 ]
./fjar.sh:10:    echo "==> Found \"$LOOK_FOR\" in $i"
./fjar.sh:11:  fi
./flargest.sh:2:find $1 -type f -print0 | xargs -0 ls -l | sort -k5,5n
./flatest.sh:2:find $1 -type f -mtime -100 -exec ls -lrt {} \+;
./flatest.sh:3:#find $1 -type f -exec ls -lrt {} \+;
./foldest.sh:2:find $1 -type f -exec ls -lt {} \+;
./foldest.sh:3:#find $1 -type f -exec ls -lrt {} \+;
./fr.sh:2:FILE_POSTFIX=$HOME/bashrc/postfix
./fr.sh:3:PRUNE_POSTFIX=$HOME/bashrc/prunefix
./fr.sh:4:PRUNE_FILE=$HOME/bashrc/prunefile
./fr.sh:5:find_params=();
./fr.sh:7:prune_files=();
./fr.sh:10:if [ -n "$3" ]
./fr.sh:12:fi
./fr.sh:13:while read suf
./fr.sh:15:  find_params+=( $or "-iname" "*.$suf" )
./fr.sh:17:done < "$FILE_POSTFIX"
./fr.sh:19:while read suf
./fr.sh:21:  prune_params+=( $or "-iname" "*.$suf" )
./fr.sh:23:done < "$PRUNE_POSTFIX"
./fr.sh:24:while read suf
./fr.sh:26:  prune_files+=( $or "-iname" "$suf" )
./fr.sh:28:done < "$PRUNE_FILE"
./fr.sh:29:find "$1" "(" "${prune_params[@]}" "${prune_files[@]}" ")" -prune -o "(" "${find_params[@]}" "-o" "-iname" "makefile" ")" -type f | while read -r file
./fr.sh:31:  sed -i "s#$2#$3#g" "$file"
./fw.sh:2:FILE_POSTFIX=$HOME/bashrc/postfix
./fw.sh:3:PRUNE_POSTFIX=$HOME/bashrc/prunefix
./fw.sh:4:PRUNE_FILE=$HOME/bashrc/prunefile
./fw.sh:5:find_params=();
./fw.sh:7:prune_files=();
./fw.sh:8:find_result="$2".findresult
./fw.sh:9:if [ -f "$find_result" ]; then
./fw.sh:10:  echo the search is already done, if you want to update, please delete the *.findresult file first
./fw.sh:12:fi
./fw.sh:15:if [ -n "$3" ]
./fw.sh:17:fi
./fw.sh:18:while read suf
./fw.sh:20:  find_params+=( $or "-iname" "*.$suf" )
./fw.sh:22:done < "$FILE_POSTFIX"
./fw.sh:24:while read suf
./fw.sh:26:  prune_params+=( $or "-iname" "*.$suf" )
./fw.sh:28:done < "$PRUNE_POSTFIX"
./fw.sh:29:while read suf
./fw.sh:31:  prune_files+=( $or "-iname" "$suf" )
./fw.sh:33:done < "$PRUNE_FILE"
./fw.sh:34:find "$1" "(" "${prune_params[@]}" "${prune_files[@]}" "-o" "-iname" "$find_result" ")" -prune -o "(" "${find_params[@]}" "-o" "-iname" "makefile" ")" -exec fgrep -inH  $grep_params "$2" {} \; > "$find_result"
./fww.sh:2:FILE_POSTFIX=$HOME/bashrc/postfix
./fww.sh:3:PRUNE_POSTFIX=$HOME/bashrc/prunefix
./fww.sh:4:PRUNE_FILE=$HOME/bashrc/prunefile
./fww.sh:5:find_params=();
./fww.sh:7:prune_files=();
./fww.sh:8:find_result="$2".findresult
./fww.sh:11:if [ -n "$3" ]
./fww.sh:13:fi
./fww.sh:14:while read suf
./fww.sh:16:  find_params+=( $or "-iname" "*.$suf" )
./fww.sh:18:done < "$FILE_POSTFIX"
./fww.sh:20:while read suf
./fww.sh:22:  prune_params+=( $or "-iname" "*.$suf" )
./fww.sh:24:done < "$PRUNE_POSTFIX"
./fww.sh:25:while read suf
./fww.sh:27:  prune_files+=( $or "-iname" "$suf" )
./fww.sh:29:done < "$PRUNE_FILE"
./fww.sh:30:find "$1" "(" "${prune_params[@]}" "${prune_files[@]}" "-o" "-iname" "$find_result" ")" -prune -o "(" "${find_params[@]}" "-o" "-iname" "makefile" ")" -exec fgrep -wnH  $grep_params "$2" {} \; > "$find_result"
./g.sh:2:git commit  --no-verify -am "n" && git gc
./ga.sh:2:if [ -z "$1" ];
./ga.sh:6:  git add -f $1
./ga.sh:7:fi
./gagh.sh:2:if [ ! -z "$1" ];
./gagh.sh:5:fi
./gagh.sh:6:folder=`pwd | sed -e 's/\/.*\///g'`
./gagh.sh:8:#if  [ ! -z "${TESTGIT}" ];
./gagh.sh:10:gh=git@github.com:huangyingw/$folder.git
./gagh.sh:13:#fi
./gbrD.sh:3:for ss in `git remote -v |awk '/\(fetch\)$/{print $1}'`; do git push $ss :$1; done
./gcb.sh:9:if [ ! -d ".git" ];
./gcb.sh:15:  if [ -d ${x} ];
./gcb.sh:18:  fi
./gcb.sh:19:fi
./gcl.sh:3:if [ -z "$1" ];
./gcl.sh:9:fi
./gcl.sh:12:if [ -d ${x} ];
./gcl.sh:18:fi
./gclb.sh:8:if [ ! -d ".git" ];
./gclb.sh:14:  if [ -d ${x} ];
./gclb.sh:17:  fi
./gclb.sh:18:fi
./gctb.sh:2:if [ -z "$1" ];
./gctb.sh:6:	if [ ! -d "temp" ];
./gctb.sh:8:		if [ ! -d "$1/.git" ];
./gctb.sh:13:			rm -frv "$1"
./gctb.sh:14:			mv -fv "temp" "$1"
./gctb.sh:16:		fi
./gctb.sh:19:	fi
./gctb.sh:20:fi
./gfix.sh:2:git branch -D fix
./gfix.sh:3:for ss in `git remote -v |awk '/\(fetch\)$/{print $1}'`; do git push $ss :fix; done
./gfix.sh:4:git checkout -b fix
./gib.sh:2:if [ -z "$1" ];
./gib.sh:6:	if [ ! -d "temp" ];
./gib.sh:8:		if [ ! -d "$1/.git" ];
./gib.sh:16:			rm -frv "$1"
./gib.sh:17:			mv -fv "temp" "$1"
./gib.sh:21:		fi
./gib.sh:24:	fi
./gib.sh:25:fi
./gpl.sh:3:for ss in `git remote -v |awk '/\(fetch\)$/{print $1}'`
./gps.sh:2:for ss in `git remote -v |awk '/\(fetch\)$/{print $1}'`; do git push --all $ss && git push --tag $ss; done
./index.sh:2:java org.apache.lucene.demo.IndexFiles /media/volgrp/myproject/git/java/lucene/lucene-3.0.1/docs/
./linuxmirror.sh:5:if [ ! -d "${TARGET}" ];
./linuxmirror.sh:8:fi
./linuxmirror.sh:10:rsync -aH --delete-before \
./linuxmirror.sh:11:  --exclude fstab \
./linuxmirror.sh:12:  --exclude grub.cfg \
./linuxmirror.sh:13:  --exclude mdadm.conf \
./linuxmirror.sh:19:  --exclude interfaces \
./linuxmirror.sh:20:  --exclude /etc/initramfs-tools/conf.d/resume \
./lsnic.sh:6:#  This program is free software; you can redistribute it and/or modify it
./lsnic.sh:7:#  under the terms and conditions of the GNU General Public License,
./lsnic.sh:8:#  version 2, as published by the Free Software Foundation.
./lsnic.sh:10:#  This program is distributed in the hope it will be useful, but WITHOUT
./lsnic.sh:11:#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
./lsnic.sh:12:#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
./lsnic.sh:15:#  You should have received a copy of the GNU General Public License along with
./lsnic.sh:16:#  this program; if not, write to the Free Software Foundation, Inc.,
./lsnic.sh:17:#  51 Franklin St - Fifth Floor, Boston, MA 02110-1301 USA.
./lsnic.sh:19:#  Contact Information:
./lsnic.sh:27:temp=`lspci | grep -i 'Ethernet Controller\|Network Controller'|cut -f1 -d " "`
./lsnic.sh:29:#Define two arrays for storing IPPorts
./lsnic.sh:33:#Populate IOPorts1 with bus info from lspci.  Populate IoPorts2 with bus info
./lsnic.sh:34:#from ethtool.
./lsnic.sh:36:for (( counter=0 ; counter < $TotalControllers ; counter++ ))
./lsnic.sh:38:  offset=$(($counter+1))
./lsnic.sh:39:  IOPorts1[$counter]=`echo $temp|cut -f$offset -d" "`
./lsnic.sh:40:  if (ethtool -i eth$counter) &> /dev/null; then
./lsnic.sh:41:    IOPorts2[$counter]=`ethtool -i eth$counter|grep 'bus-info'|cut -f3- -d :`
./lsnic.sh:42:  fi
./lsnic.sh:45:#Loop through both arrays and determine if there's a match in IOPort1 & IOPort2.  If so
./lsnic.sh:46:#then the driver is loaded, and write to screen all the related information.  If there
./lsnic.sh:47:#is no match then there isn't a driver loaded for that device and write to screen only
./lsnic.sh:48:#the information available from lspci
./lsnic.sh:50:for ((counter=0 ; counter < $TotalControllers ; counter++))
./lsnic.sh:53:  for ((counter1=0 ; counter1 < $TotalControllers; counter1++))
./lsnic.sh:55:    if [ "${IOPorts1[$counter]}" = "${IOPorts2[$counter1]}" ]; then
./lsnic.sh:57:      DeviceID=`lspci -nn | grep ${IOPorts2[$counter1]} |cut -f3- -d"["| cut -c 1-9`
./lsnic.sh:58:      EthernetController=`lspci -v |grep ${IOPorts2[$counter1]} | cut -f4- -d" "|cut -f1 -d"("`
./lsnic.sh:59:      AdapterName=`lspci -v | grep ${IOPorts2[$counter1]} -A 1 | grep 'Subsystem'|cut -f2- -d" "`
./lsnic.sh:60:      DriverName=`ethtool -i eth$counter1 | grep -i 'driver' | cut -f2 -d" "`
./lsnic.sh:61:      DriverVersion=`ethtool -i eth$counter1 | grep -m 1 -i 'version'| cut -f2 -d" "`
./lsnic.sh:68:    fi
./lsnic.sh:70:  if [ "$Match" = "0" ] ; then
./lsnic.sh:71:    DeviceID=`lspci -nn | grep ${IOPorts1[$counter]} |cut -f3- -d"["| cut -c 1-9`
./lsnic.sh:72:    EthernetController=`lspci -v |grep ${IOPorts1[$counter]} | cut -f4- -d" "|cut -f1 -d"("`
./lsnic.sh:73:    AdapterName=`lspci -v | grep ${IOPorts1[$counter]} -A 1 | grep 'Subsystem'|cut -f2- -d" "`
./lsnic.sh:80:  fi
./lucene.sh:2:java -cp /media/myproject/git/java/lucene/lucene-3.0.1/lucene-core-3.0.1.jar:/media/myproject/git/java/lucene/lucene-3.0.1/lucene-core-3.0.1.jar org.apache.lucene.demo.IndexFiles /media/myproject/git/java/lucene/lucene-3.0.1/docs/
./mirror.sh:5:if [ ! -d "${TARGET}" ];
./mirror.sh:8:fi
./move.sh:3:function IsSlash()
./move.sh:20:if [ "$SOURCE" != "$TARGET" ]
./move.sh:22:  if [ ! -d "$TARGET" ];
./move.sh:25:  fi
./move.sh:31:    && rm -fr "$SOURCE"
./move.sh:33:  echo "please choose the different dir!"
./move.sh:34:fi
./ntp.sh:1:#cp -fv /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \
./qrsync.sh:5:if [ ! -d "${TARGET}" ];
./qrsync.sh:8:fi
./qrsync.sh:10:rsync -aH --delete-after \
./rsync_svn.sh:5:if [ ! -d "${TARGET}" ];
./rsync_svn.sh:8:fi
./rsync_svn.sh:10:rsync -aH --delete-after \
./rsynctype.sh:4:FILE_TYPE=$HOME/bashrc/file_type
./rsynctype.sh:5:command_params=`cat ${FILE_TYPE}|{ read suf; echo -n "--include=*.$suf";while read suf;do echo -n " --include=*.$suf";done; }`
./rsynctype.sh:7:if [ "$SOURCE" != "$TARGET" ]
./rsynctype.sh:9:  if [ ! -d "$TARGET" ];
./rsynctype.sh:12:  fi
./rsynctype.sh:15:  echo "please choose the different dir!"
./rsynctype.sh:16:fi
./run.sh:3:if [ -f "run.sh" ]; then
./run.sh:6:  if [ -f "run" ]; then
./run.sh:8:  fi
./run.sh:9:fi
./runb.sh:3:if [ -f "run.sh" ]; then
./runb.sh:6:  if [ -f "run" ]; then
./runb.sh:8:  fi
./runb.sh:9:fi
./select_copy.sh:2:find /home/huangyingw/cvs/ -type f -name \*.properties | while read ss;
./setup.sh:4:while read suf
./setup.sh:6:  app_list+=("$suf")
./setup.sh:8:apt-get install "${app_list[@]}" --force-yes -y
./smb.sh:2:smbmount //192.168.0.8/volgrp  /media/smb    -o username=samba,password=ilove03180118,iocharset=utf8
./smb.sh:3:smbmount //192.168.1.3/file_system  /media/mldonkey    -o username=samba,password=ilove03180118,iocharset=utf8
./sync_code.sh:3:LCK_FILE=`basename $0`.lck
./sync_code.sh:5:if [ -f "${LCK_FILE}" ]; then
./sync_code.sh:6:  MYPID=`head -n 1 "${LCK_FILE}"`
./sync_code.sh:10:  if [ -z "${TEST_RUNNING}" ]; then
./sync_code.sh:12:    # Echo current PID into lock file
./sync_code.sh:13:    echo $$ > "${LCK_FILE}"
./sync_code.sh:14:    rsync --log-file=/root/rlog -aH --delete-after \
./sync_code.sh:17:    /media/volgrp/myproject/git/work/platform/cvs/  172.20.4.135:/root/myproject/git/work/platform/cvs/
./sync_code.sh:23:  fi
./sync_code.sh:25:  echo $$ > "${LCK_FILE}"
./sync_code.sh:26:fi
./task.sh:5:if [ ${check_bool} -eq 1 ];   
./task.sh:9:	if [ "$1" != s ];
./task.sh:12:	fi
./task.sh:15:fi
./tcopy.sh:5:if [ ! -d "${TARGET}" ];
./tcopy.sh:8:fi
./tcopy.sh:11:		"${SOURCE}" "${TARGET}"> find.cc
./tmirror.sh:6:if [ ! -d "${TARGET}" ];
./tmirror.sh:9:fi
./tmirror.sh:12:		"${SOURCE}" "${TARGET}"> find.cc
./tmove.sh:3:function IsSlash()
./tmove.sh:20:if [ "$SOURCE" != "$TARGET" ]
./tmove.sh:22:  if [ ! -d "$TARGET" ];
./tmove.sh:25:  fi
./tmove.sh:28:    "${SOURCE}" "${TARGET}"> find.cc
./tmove.sh:30:  echo "please choose the different dir!"
./tmove.sh:31:fi
./trsync_svn.sh:5:if [ ! -d "${TARGET}" ];
./trsync_svn.sh:8:fi
./trsync_svn.sh:10:rsync -aHinv --delete-after \
./tubak.sh:3:if [ -n "$1" ]
./tubak.sh:6:fi
./tubak.sh:11:while read suf
./tubak.sh:13:  exclude_params+=( "--exclude=$suf" )
./tubak.sh:16:while read suf
./tubak.sh:18:  include_params+=( "--include=$suf" )
./tubak.sh:20:rsync -aHinv --delete-during "${exclude_params[@]}" "${include_params[@]}" / "${SOURCE}"> find.cc
./tures.sh:3:if [ -n "$1" ]
./tures.sh:6:fi
./tures.sh:11:while read suf
./tures.sh:13:  exclude_params+=( "--exclude=$suf" )
./tures.sh:16:while read suf
./tures.sh:18:  include_params+=( "--include=$suf" )
./tures.sh:20:rsync -aHinv --delete-during "${exclude_params[@]}" "${SOURCE}" /> find.cc
./twhole_ures.sh:3:if [ -n "$1" ]
./twhole_ures.sh:6:fi
./twhole_ures.sh:10:while read suf
./twhole_ures.sh:12:  exclude_params+=( "--exclude=$suf" )
./twhole_ures.sh:15:while read suf
./twhole_ures.sh:17:  include_params+=( "--include=$suf" )
./twhole_ures.sh:19:rsync -aHinv --delete-during "${exclude_params[@]}" "${SOURCE}" /> find.cc
./ubak.sh:3:if [ -n "$1" ]
./ubak.sh:6:fi
./ubak.sh:11:while read suf
./ubak.sh:13:  exclude_params+=( "--exclude=$suf" )
./ubak.sh:16:while read suf
./ubak.sh:18:  include_params+=( "--include=$suf" )
./ures.sh:3:if [ -n "$1" ]
./ures.sh:6:fi
./ures.sh:11:while read suf
./ures.sh:13:  exclude_params+=( "--exclude=$suf" )
./ures.sh:16:while read suf
./ures.sh:18:  include_params+=( "--include=$suf" )
./vclone.sh:5:if [ ! -d "${DIR}" ];
./vclone.sh:8:fi
./vclone.sh:10:  ; virt-clone --force --original "$ORIGIN" --name "$TARGET" --file "$DIR"/"$TARGET".qcow2 \
./vitag.sh:2:TARGET='/export/home1/username/cscope_db/cscope.files'
./vitag.sh:3:FILE_POSTFIX=$HOME/bashrc/postfix
./vitag.sh:4:PRUNE_POSTFIX=$HOME/bashrc/prunefix
./vitag.sh:5:PRUNE_FILE=$HOME/bashrc/prunefile
./vitag.sh:6:find_params=();
./vitag.sh:9:while read suf
./vitag.sh:11:  find_params+=( $or "-name" "*.$suf" )
./vitag.sh:13:done < "$FILE_POSTFIX"
./vitag.sh:15:while read suf
./vitag.sh:17:  prune_params+=( $or "-iname" "*.$suf" )
./vitag.sh:19:done < "$PRUNE_POSTFIX"
./vitag.sh:20:while read suf
./vitag.sh:22:  prune_files+=( $or "-iname" "$suf" )
./vitag.sh:24:done < "$PRUNE_FILE"
./vitag.sh:25:find "$PWD" "(" "${prune_params[@]}" "${prune_files[@]}" ")" -a -prune -o "(" "${find_params[@]}" "-o" "-iname" "makefile" ")" -print |sed 's/\(["'\''\]\)/\\\1/g;s/.*/"&"/' > ${TARGET}
./vlog.sh:2:TARGET='/export/home1/username/cscope_db/cscope.files'
./vlog.sh:3:FILE_POSTFIX=$HOME/bashrc/postfix
./vlog.sh:4:find `pwd`/ -type f \
./vsd.sh:2:XMLFILE=$1
./vsd.sh:3:DOMAIN=`echo "$XMLFILE" |sed 's/\.xml//g'`
./vsd.sh:4:virsh define "$XMLFILE" \
./vssr.sh:4:virsh snapshot-revert --force "$DOMAIN" --snapshotname "$SNAPSHOT" \
./whole_ures.sh:3:if [ -n "$1" ]
./whole_ures.sh:6:fi
./whole_ures.sh:10:while read suf
./whole_ures.sh:12:  exclude_params+=( "--exclude=$suf" )
./whole_ures.sh:15:while read suf
./whole_ures.sh:17:  include_params+=( "--include=$suf" )
./wol.sh:2:if [ -z "$1" ];
./wol.sh:7:  wakeonlan b8:70:f4:ce:3d:f3
./wol.sh:9:fi
./work.sh:3:RSYNCSOURCE=/pcc/cnbuild/build/output/vmo.isf2_1_pudong_drop2/
./work.sh:5:localmain=/media/volgrp/software/work/platform/cnbuild/vmo.mainline/
./work.sh:6:BASEDIR=/media/volgrp/software/work/platform/cnbuild/vmo.isf2_1_pudong_drop2/
./work.sh:7:heilongjiangsource="/pcc/cnbuild/build/output/vmo.isf2_1_heilongjiang"
./work.sh:8:heilongjianglocal="/media/volgrp/software/work/platform/cnbuild/build/output/vmo.isf2_1_heilongjiang/"
./work.sh:10:# check to see if script is already running
./work.sh:12:LCK_FILE=`basename $0`.lck
./work.sh:14:if [ -f "${LCK_FILE}" ]; then
./work.sh:15:  MYPID=`head -n 1 "${LCK_FILE}"`
./work.sh:19:  if [ -z "${TEST_RUNNING}" ]; then
./work.sh:21:    # Echo current PID into lock file
./work.sh:22:    echo $$ > "${LCK_FILE}"
./work.sh:23:    rsync -ahHv --log-file=/root/rlog --delete-after ${mainsource} ${localmain}
./work.sh:24:    rsync -ahHv --log-file=/root/rlog --delete-after ${RSYNCSOURCE} ${BASEDIR}
./work.sh:25:    rsync -ahHv --log-file=/root/rlog --delete-after ${heilongjiangsource} ${heilongjianglocal}
./work.sh:26:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:27:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86/etc/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86/etc/
./work.sh:28:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:29:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86/lib/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86/lib/
./work.sh:30:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:31:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86/bin/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86/bin/
./work.sh:32:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:33:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86_64/bin/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86_64/bin/
./work.sh:34:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:35:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86_64/etc/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86_64/etc/
./work.sh:36:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:37:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86_64/lib/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/linux2.6-glibc2.3-x86_64/lib/
./work.sh:38:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:39:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x86/etc/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x86/etc/
./work.sh:40:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:41:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x86/bin/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x86/bin/
./work.sh:42:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:43:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x86/lib/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x86/lib/
./work.sh:44:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:45:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x64/etc/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x64/etc/
./work.sh:46:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:47:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x64/bin/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x64/bin/
./work.sh:48:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:49:      /pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x64/lib/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/egoagent/2.0/win-x64/lib/
./work.sh:50:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:51:      /pcc/lsfqa-trusted/3rdparty/jdk/1.5.0_08/linux-x86/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/3rdparty/jdk/1.5.0_08/linux-x86/
./work.sh:52:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:53:      /pcc/app/Linux_jdk1.5.0_08_x86/ /media/volgrp/myproject/git/work/platform/pcc/app/Linux_jdk1.5.0_08_x86/
./work.sh:54:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:55:      /pcc/lsfqa-trusted/perf_ext/shared/isf2_1_pudong_drop_2/  /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/perf_ext/shared/isf2_1_pudong_drop_2/
./work.sh:56:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:57:      /pcc/app/apache-ant-1.6.0/  /media/volgrp/myproject/git/work/platform/pcc/app/apache-ant-1.6.0/
./work.sh:58:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:59:      /pcc/lsfqa-trusted/perf_ext/shared/Excalibur/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/perf_ext/shared/Excalibur/
./work.sh:60:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:61:      /pcc/cnbuild/build/output/RTM2.0_SS_POC/ /media/volgrp/software/work/platform/cnbuild/build/output/RTM2.0_SS_POC/
./work.sh:62:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:63:      /pcc/lsfqa-trusted/vmo_monte_ext/shared/mainline/ /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/vmo_monte_ext/shared/mainline/
./work.sh:64:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:65:      /pcc/lsfqa-trusted/Standard_Code/license/     /media/volgrp/myproject/git/work/platform/pcc/lsfqa-trusted/Standard_Code/license/
./work.sh:66:    rsync --log-file=/root/rlog -aH --delete-after \
./work.sh:67:      /pcc/cnbuild/build/output/vmo.ISF_2_2_SZSC/ /media/volgrp/software/work/platform/cnbuild/vmo.ISF_2_2_SZSC/
./work.sh:73:  fi
./work.sh:75:  echo $$ > "${LCK_FILE}"
./work.sh:76:fi
./xsql.sh:2:if [ -z "$1" ];
./xsql.sh:4:  echo Please provide the specified sql file
./xsql.sh:9:fi
