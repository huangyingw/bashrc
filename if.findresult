./apt-mirror.sh:11:if [ ${check_bool} -eq 1 ];   
./apt-mirror.sh:13:  # check to see if script is already running
./apt-mirror.sh:17:  if [ -f "${LCK_FILE}" ]; then
./apt-mirror.sh:22:    if [ -z "${TEST_RUNNING}" ]; then
./back.sh:5:if [ ! -d "${TARGET}" ];
./build.sh:10:# check to see if script is already running
./build.sh:14:if [ -f "${LCK_FILE}" ]; then
./build.sh:19:  if [ -z "${TEST_RUNNING}" ]; then
./check_disk.sh:6:		if ! (df -Th|grep -q ${file})
./check_raid.sh:3:if [ $raid_count -lt 4 ] 
./check_running.sh:10:# check to see if script is already running
./check_running.sh:14:if [ -f "${LCK_FILE}" ]; then
./check_running.sh:19:  if [ -z "${TEST_RUNNING}" ]; then
./copy.sh:5:if [ ! -d "${TARGET}" ];
./dcopy.sh:5:if [ ! -d "${TARGET}" ];
./debmirror.sh:24:# Release=      -d      # Release of the system (Dapper, Edgy, Feisty, Gutsy, Hardy, Intrepid), and the -updates and -security ( -backports can be added if desired)
./debmirror.sh:52:# --source \ in the place of --no-source \ if you want sources also.
./debug.sh:2:if [ -z "$1" ];
./encrypt.sh:2:if [ -z "$1" ];
./fd.sh:6:if [ -f "$find_result" ]; then
./fd.sh:7:  echo the search is already done, if you want to update, please delete the findresult file first
./ff.sh:6:if [ -f "$find_result" ]; then
./ff.sh:7:  echo the search is already done, if you want to update, please delete the findresult file first
./fgh.sh:5:  if [ -d "$file" ];
./fgh.sh:7:    if [ -d "$file/.git" ];
./fgh.sh:16:if [ -z "$1" ];
./fgs.sh:5:  if [ -d $1"/"$file ]
./fgs.sh:7:    if [ ! -d $1"/"$file"/.git" ]
./fgs.sh:13:      if  ( git status|grep -q modified: )
./fgs.sh:22:if [ -n "$1" ]
./fjar.sh:8:  if [ $? == 0 ]
./fr.sh:10:if [ -n "$3" ]
./fw.sh:9:if [ -f "$find_result" ]; then
./fw.sh:10:  echo the search is already done, if you want to update, please delete the findresult file first
./fw.sh:15:if [ -n "$3" ]
./fww.sh:9:if [ -f "$find_result" ]; then
./fww.sh:10:  echo the search is already done, if you want to update, please delete the findresult file first
./fww.sh:15:if [ -n "$3" ]
./g.sh:3:if [ -n "$1" ]
./ga.sh:2:if [ -z "$1" ];
./gagh.sh:2:if [ ! -z "$1" ];
./gagh.sh:8:#if  [ ! -z "${TESTGIT}" ];
./gcb.sh:9:if [ ! -d ".git" ];
./gcb.sh:15:  if [ -d ${x} ];
./gcl.sh:3:if [ -z "$1" ];
./gcl.sh:12:if [ -d ${x} ];
./gclb.sh:8:if [ ! -d ".git" ];
./gclb.sh:14:  if [ -d ${x} ];
./gctb.sh:2:if [ -z "$1" ];
./gctb.sh:6:	if [ ! -d "temp" ];
./gctb.sh:8:		if [ ! -d "$1/.git" ];
./gib.sh:2:if [ -z "$1" ];
./gib.sh:6:	if [ ! -d "temp" ];
./gib.sh:8:		if [ ! -d "$1/.git" ];
./linuxmirror.sh:5:if [ ! -d "${TARGET}" ];
./lsnic.sh:16:#  this program; if not, write to the Free Software Foundation, Inc.,
./lsnic.sh:40:  if (ethtool -i eth$counter) &> /dev/null; then
./lsnic.sh:45:#Loop through both arrays and determine if there's a match in IOPort1 & IOPort2.  If so
./lsnic.sh:55:    if [ "${IOPorts1[$counter]}" = "${IOPorts2[$counter1]}" ]; then
./lsnic.sh:70:  if [ "$Match" = "0" ] ; then
./mirror.sh:5:if [ ! -d "${TARGET}" ];
./move.sh:20:if [ "$SOURCE" != "$TARGET" ]
./move.sh:22:  if [ ! -d "$TARGET" ];
./qrsync.sh:5:if [ ! -d "${TARGET}" ];
./rsync_svn.sh:5:if [ ! -d "${TARGET}" ];
./rsynctype.sh:7:if [ "$SOURCE" != "$TARGET" ]
./rsynctype.sh:9:  if [ ! -d "$TARGET" ];
./run.sh:3:if [ -f "run.sh" ]; then
./run.sh:6:  if [ -f "run" ]; then
./runb.sh:3:if [ -f "run.sh" ]; then
./runb.sh:6:  if [ -f "run" ]; then
./sync_code.sh:5:if [ -f "${LCK_FILE}" ]; then
./sync_code.sh:10:  if [ -z "${TEST_RUNNING}" ]; then
./task.sh:5:if [ ${check_bool} -eq 1 ];   
./task.sh:9:	if [ "$1" != s ];
./tcopy.sh:5:if [ ! -d "${TARGET}" ];
./tmirror.sh:6:if [ ! -d "${TARGET}" ];
./tmove.sh:20:if [ "$SOURCE" != "$TARGET" ]
./tmove.sh:22:  if [ ! -d "$TARGET" ];
./trsync_svn.sh:5:if [ ! -d "${TARGET}" ];
./tubak.sh:3:if [ -n "$1" ]
./tures.sh:3:if [ -n "$1" ]
./twhole_ures.sh:3:if [ -n "$1" ]
./ubak.sh:3:if [ -n "$1" ]
./ufind.sh:13:  if [ -n "$3" ]
./ures.sh:3:if [ -n "$1" ]
./vclone.sh:5:if [ ! -d "${DIR}" ];
./whole_ures.sh:3:if [ -n "$1" ]
./wol.sh:2:if [ -z "$1" ];
./work.sh:10:# check to see if script is already running
./work.sh:14:if [ -f "${LCK_FILE}" ]; then
./work.sh:19:  if [ -z "${TEST_RUNNING}" ]; then
./xsql.sh:2:if [ -z "$1" ];
